@using Services
@inject QueryService _queryService


<MatTable Items="@contracts" class="mat-elevation-z5" ShowPaging="true" UseSortHeaderRow="false" OnRowDbClick="OnContractRowClicked" AllowSelection="true">
    <MatTableHeader>
        <th style="width:35%;">Id</th>
        <th style="width:65%;">Name</th>
        <th style="width:30%;">Contract Type</th>
    </MatTableHeader>
    <MatTableRow>
        <td style="width:35%;">@context.Id </td>
        <td style="width:35%;">@context.Name</td>
        <td style="width:30%;">@context.ContractType</td>
    </MatTableRow>
</MatTable>

<MatFAB Style="position: fixed; bottom: 1rem; right: 1rem;" Icon="add" OnClick="@OpenDialog" Raised="true"></MatFAB>
<CreateContractDialog @bind-Opened="DialogOpened" @bind-Contracts="contracts" />
<UpdateDeleteContractDialog @bind-Show="ModifyContractDialogOpen" @bind-Contracts="contracts" @bind-Contract="SelectedContract" />

@code {

    public List<BlazorFront.Models.Contract> contracts;
    public bool DialogOpened = false;
    public bool ModifyContractDialogOpen = false;
    public BlazorFront.Models.Contract SelectedContract;

    protected override async Task OnInitializedAsync()
    {
        SelectedContract = new Models.Contract();
#if DEBUG
        await Task.Delay(10000);
#endif
        contracts = await _queryService.GetContractsAsync();
    }

    void OpenDialog()
    {
        DialogOpened = true;
    }

    void OnContractRowClicked(object contract)
    {
        var contractSelected = contract as BlazorFront.Models.Contract;

        if (contractSelected != null)
        {
            SelectedContract = contractSelected;
            ModifyContractDialogOpen = true;
        }
    }
}
